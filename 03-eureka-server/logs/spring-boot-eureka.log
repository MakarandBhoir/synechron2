2024-12-03 10:05:57 - Starting ApplicationTests using Java 21.0.1 with PID 2928 (started by Makarand in D:\Training\Synechron\Workspace\03-eureka-server)
2024-12-03 10:05:57 - No active profile set, falling back to 1 default profile: "default"
2024-12-03 10:05:59 - BeanFactory id=b249604d-70d8-3c19-bc42-53caf5ee8031
2024-12-03 10:06:00 - Constructed eureka meta-data healthcheckUrl: http://192.168.252.74:8761/actuator/health
2024-12-03 10:06:00 - Constructed eureka meta-data statusPageUrl: http://192.168.252.74:8761/actuator/info
2024-12-03 10:06:01 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-12-03 10:06:02 - Setting initial instance status as: STARTING
2024-12-03 10:06:02 - Initializing Eureka in region us-east-1
2024-12-03 10:06:02 - Client configured to neither register nor query for data.
2024-12-03 10:06:02 - Discovery Client initialized at timestamp 1733200562194 with initial instances count: 0
2024-12-03 10:06:02 - Initializing ...
2024-12-03 10:06:02 - Adding new peer nodes [http://localhost:8761/eureka/]
2024-12-03 10:06:02 - Using JSON encoding codec LegacyJacksonJson
2024-12-03 10:06:02 - Using JSON decoding codec LegacyJacksonJson
2024-12-03 10:06:02 - Using XML encoding codec XStreamXml
2024-12-03 10:06:02 - Using XML decoding codec XStreamXml
2024-12-03 10:06:02 - Replica node URL:  http://localhost:8761/eureka/
2024-12-03 10:06:02 - Finished initializing remote region registries. All known remote regions: []
2024-12-03 10:06:02 - Initialized
2024-12-03 10:06:03 - Exposing 1 endpoint beneath base path '/actuator'
2024-12-03 10:06:03 - Registering application 02-EUREKA-SERVER with eureka with status UP
2024-12-03 10:06:03 - Started ApplicationTests in 6.906 seconds (process running for 9.511)
2024-12-03 10:06:03 - isAws returned false
2024-12-03 10:06:03 - Initialized server context
2024-12-03 10:06:03 - Got 1 instances from neighboring DS node
2024-12-03 10:06:03 - Renew threshold is: 1
2024-12-03 10:06:03 - Changing status to UP
2024-12-03 10:06:03 - Started Eureka Server
2024-12-03 10:06:04 - Unregistering application 02-EUREKA-SERVER with eureka with status DOWN
2024-12-03 10:06:04 - Shutting down Eureka Server..
2024-12-03 10:06:04 - Shutting down ...
2024-12-03 10:06:04 - Shut down
2024-12-03 10:06:04 - Eureka Service is now shutdown...
2024-12-03 10:06:04 - Shutting down ...
2024-12-03 10:06:04 - Shut down
2024-12-03 10:06:04 - Cannot clean connections
java.lang.IllegalStateException: Client instance has been closed.
	at org.glassfish.jersey.internal.guava.Preconditions.checkState(Preconditions.java:169)
	at org.glassfish.jersey.client.JerseyClient.checkNotClosed(JerseyClient.java:248)
	at org.glassfish.jersey.client.JerseyClient.getConfiguration(JerseyClient.java:363)
	at org.glassfish.jersey.client.JerseyClient.getConfiguration(JerseyClient.java:54)
	at com.netflix.discovery.shared.transport.jersey3.EurekaJersey3ClientImpl$ConnectionCleanerTask.run(EurekaJersey3ClientImpl.java:338)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-12-03 10:06:04 - Shutting down DiscoveryClient ...
2024-12-03 10:06:04 - Completed shut down of DiscoveryClient
2024-12-03 11:02:43 - Starting EurekaApplication using Java 21.0.1 with PID 23828 (D:\Training\Synechron\Workspace\03-eureka-server\target\classes started by Makarand in D:\Training\Synechron\Workspace\03-eureka-server)
2024-12-03 11:02:43 - No active profile set, falling back to 1 default profile: "default"
2024-12-03 11:02:46 - BeanFactory id=01da308c-1e47-3848-a469-a20382719ac2
2024-12-03 11:02:46 - Tomcat initialized with port 8761 (http)
2024-12-03 11:02:46 - Initializing ProtocolHandler ["http-nio-8761"]
2024-12-03 11:02:46 - Starting service [Tomcat]
2024-12-03 11:02:46 - Starting Servlet engine: [Apache Tomcat/10.1.33]
2024-12-03 11:02:47 - Initializing Spring embedded WebApplicationContext
2024-12-03 11:02:47 - Root WebApplicationContext: initialization completed in 2912 ms
2024-12-03 11:02:47 - Filter 'eurekaVersionFilterRegistration' configured for use
2024-12-03 11:02:48 - Using JSON encoding codec LegacyJacksonJson
2024-12-03 11:02:48 - Using JSON decoding codec LegacyJacksonJson
2024-12-03 11:02:49 - Using XML encoding codec XStreamXml
2024-12-03 11:02:49 - Using XML decoding codec XStreamXml
2024-12-03 11:02:50 - Constructed eureka meta-data healthcheckUrl: http://192.168.252.74:8761/actuator/health
2024-12-03 11:02:50 - Constructed eureka meta-data statusPageUrl: http://192.168.252.74:8761/actuator/info
2024-12-03 11:02:50 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-12-03 11:02:50 - Setting initial instance status as: STARTING
2024-12-03 11:02:50 - Initializing Eureka in region us-east-1
2024-12-03 11:02:50 - Client configured to neither register nor query for data.
2024-12-03 11:02:50 - Discovery Client initialized at timestamp 1733203970708 with initial instances count: 0
2024-12-03 11:02:50 - Initializing ...
2024-12-03 11:02:50 - Adding new peer nodes [http://localhost:8761/eureka/]
2024-12-03 11:02:51 - Using JSON encoding codec LegacyJacksonJson
2024-12-03 11:02:51 - Using JSON decoding codec LegacyJacksonJson
2024-12-03 11:02:51 - Using XML encoding codec XStreamXml
2024-12-03 11:02:51 - Using XML decoding codec XStreamXml
2024-12-03 11:02:51 - Replica node URL:  http://localhost:8761/eureka/
2024-12-03 11:02:51 - Finished initializing remote region registries. All known remote regions: []
2024-12-03 11:02:51 - Initialized
2024-12-03 11:02:51 - Exposing 1 endpoint beneath base path '/actuator'
2024-12-03 11:02:51 - Registering application 02-EUREKA-SERVER with eureka with status UP
2024-12-03 11:02:51 - Starting ProtocolHandler ["http-nio-8761"]
2024-12-03 11:02:51 - isAws returned false
2024-12-03 11:02:51 - Initialized server context
2024-12-03 11:02:51 - Got 1 instances from neighboring DS node
2024-12-03 11:02:51 - Renew threshold is: 1
2024-12-03 11:02:51 - Changing status to UP
2024-12-03 11:02:51 - Started Eureka Server
2024-12-03 11:02:51 - Tomcat started on port 8761 (http) with context path '/'
2024-12-03 11:02:51 - Updating port to 8761
2024-12-03 11:02:51 - Started EurekaApplication in 8.894 seconds (process running for 9.999)
2024-12-03 11:03:12 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-03 11:03:12 - Initializing Servlet 'dispatcherServlet'
2024-12-03 11:03:12 - Completed initialization in 2 ms
2024-12-03 11:03:13 - Registered instance STUDENT-MICROSERVICE/192.168.252.74:student-microservice:8084 with status UP (replication=false)
2024-12-03 11:03:13 - registered STUDENT-MICROSERVICE, vip student-microservice, leaseDuration 90, isReplication false
2024-12-03 11:03:13 - Registered instance STUDENT-MICROSERVICE/192.168.252.74:student-microservice:8084 with status UP (replication=true)
2024-12-03 11:03:13 - registered STUDENT-MICROSERVICE, vip student-microservice, leaseDuration 90, isReplication true
2024-12-03 11:03:43 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication false
2024-12-03 11:03:43 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication true
2024-12-03 11:03:51 - Running the evict task with compensationTime 0ms
2024-12-03 11:40:06 - Starting EurekaApplication using Java 21.0.1 with PID 15112 (D:\Training\Synechron\Workspace\03-eureka-server\target\classes started by Makarand in D:\Training\Synechron\Workspace\03-eureka-server)
2024-12-03 11:40:06 - No active profile set, falling back to 1 default profile: "default"
2024-12-03 11:40:08 - BeanFactory id=01da308c-1e47-3848-a469-a20382719ac2
2024-12-03 11:40:09 - Tomcat initialized with port 8761 (http)
2024-12-03 11:40:09 - Initializing ProtocolHandler ["http-nio-8761"]
2024-12-03 11:40:09 - Starting service [Tomcat]
2024-12-03 11:40:09 - Starting Servlet engine: [Apache Tomcat/10.1.33]
2024-12-03 11:40:09 - Initializing Spring embedded WebApplicationContext
2024-12-03 11:40:09 - Root WebApplicationContext: initialization completed in 2631 ms
2024-12-03 11:40:10 - Filter 'eurekaVersionFilterRegistration' configured for use
2024-12-03 11:40:11 - Using JSON encoding codec LegacyJacksonJson
2024-12-03 11:40:11 - Using JSON decoding codec LegacyJacksonJson
2024-12-03 11:40:11 - Using XML encoding codec XStreamXml
2024-12-03 11:40:11 - Using XML decoding codec XStreamXml
2024-12-03 11:40:12 - Constructed eureka meta-data healthcheckUrl: http://192.168.252.74:8761/actuator/health
2024-12-03 11:40:12 - Constructed eureka meta-data statusPageUrl: http://192.168.252.74:8761/actuator/info
2024-12-03 11:40:12 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-12-03 11:40:12 - Setting initial instance status as: STARTING
2024-12-03 11:40:13 - Initializing Eureka in region us-east-1
2024-12-03 11:40:13 - Client configured to neither register nor query for data.
2024-12-03 11:40:13 - Discovery Client initialized at timestamp 1733206213022 with initial instances count: 0
2024-12-03 11:40:13 - Initializing ...
2024-12-03 11:40:13 - Adding new peer nodes [http://localhost:8761/eureka/]
2024-12-03 11:40:13 - Using JSON encoding codec LegacyJacksonJson
2024-12-03 11:40:13 - Using JSON decoding codec LegacyJacksonJson
2024-12-03 11:40:13 - Using XML encoding codec XStreamXml
2024-12-03 11:40:13 - Using XML decoding codec XStreamXml
2024-12-03 11:40:13 - Replica node URL:  http://localhost:8761/eureka/
2024-12-03 11:40:13 - Finished initializing remote region registries. All known remote regions: []
2024-12-03 11:40:13 - Initialized
2024-12-03 11:40:13 - Exposing 1 endpoint beneath base path '/actuator'
2024-12-03 11:40:13 - Registering application 02-EUREKA-SERVER with eureka with status UP
2024-12-03 11:40:13 - Starting ProtocolHandler ["http-nio-8761"]
2024-12-03 11:40:13 - isAws returned false
2024-12-03 11:40:13 - Initialized server context
2024-12-03 11:40:13 - Got 1 instances from neighboring DS node
2024-12-03 11:40:13 - Renew threshold is: 1
2024-12-03 11:40:13 - Changing status to UP
2024-12-03 11:40:13 - Started Eureka Server
2024-12-03 11:40:13 - Tomcat started on port 8761 (http) with context path '/'
2024-12-03 11:40:13 - Updating port to 8761
2024-12-03 11:40:13 - Started EurekaApplication in 7.598 seconds (process running for 8.489)
2024-12-03 11:40:33 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-12-03 11:40:34 - Initializing Servlet 'dispatcherServlet'
2024-12-03 11:40:34 - Completed initialization in 3 ms
2024-12-03 11:40:34 - Registered instance STUDENT-MICROSERVICE/192.168.252.74:student-microservice:8084 with status UP (replication=false)
2024-12-03 11:40:34 - registered STUDENT-MICROSERVICE, vip student-microservice, leaseDuration 90, isReplication false
2024-12-03 11:40:35 - Registered instance STUDENT-MICROSERVICE/192.168.252.74:student-microservice:8084 with status UP (replication=true)
2024-12-03 11:40:35 - registered STUDENT-MICROSERVICE, vip student-microservice, leaseDuration 90, isReplication true
2024-12-03 11:41:04 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication false
2024-12-03 11:41:04 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication true
2024-12-03 11:41:13 - Running the evict task with compensationTime 0ms
2024-12-03 11:41:34 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication false
2024-12-03 11:41:34 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication true
2024-12-03 11:42:00 - Registered instance COURSE-MICROSERVICE/192.168.252.74:course-microservice:9093 with status UP (replication=false)
2024-12-03 11:42:00 - registered COURSE-MICROSERVICE, vip course-microservice, leaseDuration 90, isReplication false
2024-12-03 11:42:00 - Registered instance COURSE-MICROSERVICE/192.168.252.74:course-microservice:9093 with status UP (replication=true)
2024-12-03 11:42:00 - registered COURSE-MICROSERVICE, vip course-microservice, leaseDuration 90, isReplication true
2024-12-03 11:42:04 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication false
2024-12-03 11:42:04 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication true
2024-12-03 11:42:13 - Running the evict task with compensationTime 10ms
2024-12-03 11:42:29 - renewed COURSE-MICROSERVICE, serverId 192.168.252.74:course-microservice:9093, isReplication false
2024-12-03 11:42:30 - renewed COURSE-MICROSERVICE, serverId 192.168.252.74:course-microservice:9093, isReplication true
2024-12-03 11:42:34 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication false
2024-12-03 11:42:34 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication true
2024-12-03 11:42:59 - renewed COURSE-MICROSERVICE, serverId 192.168.252.74:course-microservice:9093, isReplication false
2024-12-03 11:43:00 - renewed COURSE-MICROSERVICE, serverId 192.168.252.74:course-microservice:9093, isReplication true
2024-12-03 11:43:04 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication false
2024-12-03 11:43:04 - renewed STUDENT-MICROSERVICE, serverId 192.168.252.74:student-microservice:8084, isReplication true
2024-12-03 11:43:13 - Running the evict task with compensationTime 5ms
2024-12-03 11:43:30 - renewed COURSE-MICROSERVICE, serverId 192.168.252.74:course-microservice:9093, isReplication false
2024-12-03 11:43:30 - renewed COURSE-MICROSERVICE, serverId 192.168.252.74:course-microservice:9093, isReplication true
2024-12-03 12:37:02 - Starting ApplicationTests using Java 21.0.1 with PID 17464 (started by Makarand in D:\Training\Synechron\Workspace\03-eureka-server)
2024-12-03 12:37:02 - No active profile set, falling back to 1 default profile: "default"
2024-12-03 12:37:04 - BeanFactory id=b249604d-70d8-3c19-bc42-53caf5ee8031
2024-12-03 12:37:05 - Constructed eureka meta-data healthcheckUrl: http://192.168.252.74:8761/actuator/health
2024-12-03 12:37:05 - Constructed eureka meta-data statusPageUrl: http://192.168.252.74:8761/actuator/info
2024-12-03 12:37:06 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-12-03 12:37:06 - Setting initial instance status as: STARTING
2024-12-03 12:37:06 - Initializing Eureka in region us-east-1
2024-12-03 12:37:06 - Client configured to neither register nor query for data.
2024-12-03 12:37:06 - Discovery Client initialized at timestamp 1733209626824 with initial instances count: 0
2024-12-03 12:37:06 - Initializing ...
2024-12-03 12:37:06 - Adding new peer nodes [http://localhost:8761/eureka/]
2024-12-03 12:37:07 - Using JSON encoding codec LegacyJacksonJson
2024-12-03 12:37:07 - Using JSON decoding codec LegacyJacksonJson
2024-12-03 12:37:07 - Using XML encoding codec XStreamXml
2024-12-03 12:37:07 - Using XML decoding codec XStreamXml
2024-12-03 12:37:07 - Replica node URL:  http://localhost:8761/eureka/
2024-12-03 12:37:07 - Finished initializing remote region registries. All known remote regions: []
2024-12-03 12:37:07 - Initialized
2024-12-03 12:37:07 - Exposing 1 endpoint beneath base path '/actuator'
2024-12-03 12:37:07 - Registering application 02-EUREKA-SERVER with eureka with status UP
2024-12-03 12:37:07 - isAws returned false
2024-12-03 12:37:07 - Initialized server context
2024-12-03 12:37:07 - Got 1 instances from neighboring DS node
2024-12-03 12:37:07 - Renew threshold is: 1
2024-12-03 12:37:07 - Changing status to UP
2024-12-03 12:37:07 - Started Eureka Server
2024-12-03 12:37:07 - Started ApplicationTests in 5.842 seconds (process running for 7.699)
2024-12-03 12:37:08 - Unregistering application 02-EUREKA-SERVER with eureka with status DOWN
2024-12-03 12:37:08 - Shutting down Eureka Server..
2024-12-03 12:37:08 - Shutting down ...
2024-12-03 12:37:08 - Shut down
2024-12-03 12:37:08 - Eureka Service is now shutdown...
2024-12-03 12:37:08 - Shutting down ...
2024-12-03 12:37:08 - Shut down
2024-12-03 12:37:08 - Cannot clean connections
java.lang.IllegalStateException: Client instance has been closed.
	at org.glassfish.jersey.internal.guava.Preconditions.checkState(Preconditions.java:169)
	at org.glassfish.jersey.client.JerseyClient.checkNotClosed(JerseyClient.java:248)
	at org.glassfish.jersey.client.JerseyClient.getConfiguration(JerseyClient.java:363)
	at org.glassfish.jersey.client.JerseyClient.getConfiguration(JerseyClient.java:54)
	at com.netflix.discovery.shared.transport.jersey3.EurekaJersey3ClientImpl$ConnectionCleanerTask.run(EurekaJersey3ClientImpl.java:338)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-12-03 12:37:08 - Shutting down DiscoveryClient ...
2024-12-03 12:37:08 - Completed shut down of DiscoveryClient
